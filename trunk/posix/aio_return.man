AIO_RETURN(3POSIX)                                   POSIX Programmer's Manual                                   AIO_RETURN(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult
       the corresponding Linux manual page for details of Linux behavior), or the interface may not be implemented on Linux.

NAME
       aio_return — retrieve return status of an asynchronous I/O operation

SYNOPSIS
       #include <aio.h>

       ssize_t aio_return(struct aiocb *aiocbp);

DESCRIPTION
par.1  The aio_return() function shall return the return status associated with the aiocb structure referenced by the aiocbp  argu‐
       ment.  The  return status for an asynchronous I/O operation is the value that would be returned by the corresponding read(),
       write(), or fsync() function call. If the error status for the operation is equal to [EINPROGRESS], then the  return  status
       for  the  operation  is  undefined.  The aio_return() function may be called exactly once to retrieve the return status of a
       given asynchronous operation; thereafter, if the same aiocb structure is used in a call to aio_return() or  aio_error(),  an
       error may be returned. When the aiocb structure referred to by aiocbp is used to submit another asynchronous operation, then
       aio_return() may be successfully used to retrieve the return status of that operation.

RETURN VALUE
       If the asynchronous I/O operation has completed, then the return status, as described  for  read(),  write(),  and  fsync(),
       shall be returned. If the asynchronous I/O operation has not yet completed, the results of aio_return() are undefined.

       If the aio_return() function fails, it shall return −1 and set errno to indicate the error.

ERRORS
       The aio_return() function may fail if:

       EINVAL The aiocbp argument does not refer to an asynchronous operation whose return status has not yet been retrieved.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       aio_cancel(),  aio_error(),  aio_fsync(),  aio_read(),  aio_write(),  close(),  exec, exit(), fork(), lio_listio(), lseek(),
       read()

       The Base Definitions volume of POSIX.1‐2008, <aio.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in electronic form from IEEE  Std  1003.1,  2013  Edition,  Standard  for
       Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 7, Copyright
       (C) 2013 by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  (This is POSIX.1-2008  with  the
       2013  Technical  Corrigendum  1 applied.) In the event of any discrepancy between this version and the original IEEE and The
       Open Group Standard, the original IEEE and The Open Group Standard is the referee document. The  original  Standard  can  be
       obtained online at http://www.unix.org/online.html .

       Any  typographical  or formatting errors that appear in this page are most likely to have been introduced during the conver‐
       sion of the source files to man  page  format.  To  report  such  errors,  see  https://www.kernel.org/doc/man-pages/report‐
       ing_bugs.html .

IEEE/The Open Group                                             2013                                             AIO_RETURN(3POSIX)
