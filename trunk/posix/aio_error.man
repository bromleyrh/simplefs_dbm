AIO_ERROR(3POSIX)                                    POSIX Programmer's Manual                                    AIO_ERROR(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (consult
       the corresponding Linux manual page for details of Linux behavior), or the interface may not be implemented on Linux.

NAME
       aio_error — retrieve errors status for an asynchronous I/O operation

SYNOPSIS
       #include <aio.h>

       int aio_error(const struct aiocb *aiocbp);

DESCRIPTION
       The aio_error() function shall return the error status associated with the aiocb structure referenced by  the  aiocbp  argu‐
       ment.  The  error status for an asynchronous I/O operation is the errno value that would be set by the corresponding read(),
       write(), fdatasync(), or fsync() operation. If the operation has not yet completed, then the error status shall be equal  to
       [EINPROGRESS].

       If  the  aiocb  structure  pointed to by aiocbp is not associated with an operation that has been scheduled, the results are
       undefined.

RETURN VALUE
       If the asynchronous I/O operation has completed successfully, then 0 shall be returned. If the  asynchronous  operation  has
       completed  unsuccessfully,  then  the  error  status,  as  described for read(), write(), fdatasync(), and fsync(), shall be
       returned. If the asynchronous I/O operation has not yet completed, then [EINPROGRESS] shall be returned.

       If the aio_error() function fails, it shall return −1 and set errno to indicate the error.

ERRORS
       The aio_error() function may fail if:

       EINVAL The aiocbp argument does not refer to an asynchronous operation whose return status has not yet been retrieved.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       aio_cancel(), aio_fsync(), aio_read(), aio_return(), aio_write(), close(), exec, exit(), fork(), lio_listio(), lseek(),
       read()

       The Base Definitions volume of POSIX.1‐2008, <aio.h>

COPYRIGHT
       Portions  of  this  text  are  reprinted  and reproduced in electronic form from IEEE Std 1003.1, 2013 Edition, Standard for
       Information Technology -- Portable Operating System Interface (POSIX), The Open Group Base Specifications Issue 7, Copyright
       (C)  2013  by the Institute of Electrical and Electronics Engineers, Inc and The Open Group.  (This is POSIX.1-2008 with the
       2013 Technical Corrigendum 1 applied.) In the event of any discrepancy between this version and the original  IEEE  and  The
       Open  Group  Standard,  the  original IEEE and The Open Group Standard is the referee document. The original Standard can be
       obtained online at http://www.unix.org/online.html .

       Any typographical or formatting errors that appear in this page are most likely to have been introduced during  the  conver‐
       sion  of  the  source  files  to  man  page  format. To report such errors, see https://www.kernel.org/doc/man-pages/report‐
       ing_bugs.html .

IEEE/The Open Group                                             2013                                              AIO_ERROR(3POSIX)
